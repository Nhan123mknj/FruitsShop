
@{
    ViewData["Title"] = "productcategory";
	Layout = "~/Views/Shared/_Layout.cshtml";
}
@using X.PagedList.Mvc.Core;
@model X.PagedList.IPagedList<Fruits>
<div class="breadcrumb-section breadcrumb-bg">
	<div class="container">
		<div class="row">
			<div class="col-lg-8 offset-lg-2 text-center">
				<div class="breadcrumb-text">
					<p>Fresh and Organic</p>
					<h1>Shop</h1>
				</div>
			</div>
		</div>
	</div>
</div>
<div class="product-section mt-150 mb-150">
	<div class="container">

		@await Component.InvokeAsync("Category")

		<div class="row product-lists">
			@foreach (var item in Model)
			{

				var sUrl = $"/Fruits/{item.Link}-{item.Fruit_ID}.html";
				<div class="col-lg-4 col-md-6 text-center strawberry">
					<div class="single-product-item">
						<div class="product-image">
							<a href="@sUrl"><img src="@item.Image" alt=""></a>
						</div>
						<h3>@item.NameFruit</h3>
						<p class="product-price"><span>Per Kg</span> @item.Price </p>
						<a class="cart-btn" data-productid="@item.Fruit_ID"><i class="fas fa-shopping-cart"></i> Thêm vào giỏ hàng</a>
					</div>
				</div>
			}
		</div>
			<div class="row">
				<div class="col-lg-12 text-center">
					<div class="pagination-wrap">
						<ul>

							@if (Model.HasPreviousPage)
							{
								<li><a href="@Url.Action("Index", new { page = Model.PageNumber - 1 })">Prev</a></li>
							}

							@for (var i = 1; i <= Model.PageCount; i++)
							{
								<li><a class="@(i == Model.PageNumber ? "active" : "")" href="@Url.Action("Index", new { page = i })">@i</a></li>
							}

							@if (Model.HasNextPage)
							{
								<li><a href="@Url.Action("Index", new { page = Model.PageNumber + 1 })">Next</a></li>
							}

						</ul>
					</div>
				</div>
		</div>
	</div>
	</div>